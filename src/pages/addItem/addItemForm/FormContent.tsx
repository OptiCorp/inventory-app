import { TextField } from '@mui/material';
import { useContext, useEffect, useState } from 'react';
import { useController, useFormContext } from 'react-hook-form';
import { Category } from '../../../components/AddItemFormFields/Category/Category';
import { Comment } from '../../../components/AddItemFormFields/Comment/Comment';
import { Description } from '../../../components/AddItemFormFields/Description/Description';
import { Location } from '../../../components/AddItemFormFields/Location/Location';
import { ProductNumber } from '../../../components/AddItemFormFields/ProductNumber/ProductNumber';
import { SerialNumber } from '../../../components/AddItemFormFields/SerialNumber/SerialNumber';
import { Type } from '../../../components/AddItemFormFields/TemplateTypes/TemplateTypes';
import { Vendor } from '../../../components/AddItemFormFields/Vendor/Vendor';
import { WpId } from '../../../components/AddItemFormFields/WpId/WpId';
import { v4 as uuid } from 'uuid';
import AppContext from '../../../contexts/AppContext';
import { ItemSchema } from '../hooks/itemValidator';
import { RadioWrapper, StyledInput } from '../batch/styles';
import CustomDialog from '../../../components/CustomDialog/CustomDialog';

export const FormContent = () => {
    const { currentUser } = useContext(AppContext);
    const { register, getValues, control } = useFormContext<ItemSchema>();
    const {
        field: { onChange, value },
    } = useController({
        control,
        name: 'isAutogenerated',
    });
    const [isOpen, setIsOpen] = useState(true);
    const [wpIds, setWpIds] = useState<string[]>([]);
    const numberOfItems = parseInt(getValues('numberOfItems'));
    const isBatch = getValues('isBatch');
    console.log(getValues('wpId'));
    useEffect(() => {
        setIsOpen(!value);
    }, [value]);

    useEffect(() => {
        /* const uniqueWpIds = Array.from({ length: numberOfItems }, () => uuid().slice(0, 8)); */
        const uniqueWpIds = ['263', '8888', '1231', '13123', '12331'];
        setWpIds(uniqueWpIds);
    }, []);
    console.log(value);
    console.log('open: ', isOpen);
    return (
        <>
            <Type />
            <Category />

            {!isBatch && <WpId wpId={wpIds[0]} />}
            <div>
                <button onClick={() => setIsOpen(true)}>Edit</button>
                {isBatch &&
                    numberOfItems > 1 &&
                    [...Array(numberOfItems)].map((_, index) => (
                        <WpId key={index} index={index + 1} isEdit={isOpen} wpId={wpIds[index]} />
                    ))}
            </div>

            <CustomDialog
                open={isOpen}
                title="Enter Wellpartner ids"
                CancelButtonOnClick={() => {
                    onChange(true);
                    setIsOpen(false);
                }}
                SubmitButtonOnClick={() => setIsOpen(false)}
            >
                {numberOfItems > 1 &&
                    [...Array(numberOfItems)].map((_, index) => {
                        console.log('index: ', index);
                        return (
                            <WpId
                                key={index}
                                index={index + 1}
                                wpId={wpIds[index]}
                                isEdit={isOpen}
                            />
                        );
                    })}
            </CustomDialog>
            <SerialNumber />
            <ProductNumber />
            <Vendor />
            <Location />
            <Description />
            <Comment />
            <TextField
                id="filled-disabled"
                sx={{ display: 'none' }}
                label=""
                {...register('createdById', { value: currentUser?.id })}
            />
        </>
    );
};
